	var Connection = new function(){
		var serializeObject = function(obj, parentString){
			var count = obj.length;
			var serialized = "";
			for (var i in obj) {
				var keyval_str;
				var key = (obj instanceof Array) ? "" : encodeURIComponent(i);
				if (parentString) {
					key = parentString + "[" + key + "]";
				}
				else 
					key = encodeURIComponent(i);
				if (obj[i] instanceof Object) {
					if (obj[i] instanceof String ||
					obj[i] instanceof Number) 
						keyval_str = key + "=" + encodeURIComponent(obj[i]);
					else {
						keyval_str = serializeObject(obj[i], key);
					}
				}
				else {
					keyval_str = key + "=" + encodeURIComponent(obj[i].toString());
				}
				count--;
				serialized += "&" + keyval_str;
			}
			return serialized.replace(/^&/, '');
		};
		var loadScript = function(url,onload) {
			var head = document.getElementsByTagName("head")[0];
			var script = document.createElement("script");
			script.src =  url;
			script.type = "text/javascript";
			// Attach handlers for all browsers
			var done = false;
			script.onload = script.onreadystatechange = function() {
				if( !done && ( !this.readyState
							||	this.readyState == "loaded"
							||	this.readyState == "complete") ) {
					done = true;
					// Continue your code
					if(onload) onload(script);
					// Handle memory leak in IE
					script.onload = script.onreadystatechange = null;
				}
			};
			head.appendChild(script);
			return script;
		}
		this.JSONDataRequest = function(url,callbackName,callback) {
			window[callbackName] = callback;
			var count = 0;
			this.request = function(obj){
				if(callback){
					obj["callback"]=callbackName;
				}
				obj["s"] = count;
				if(this.scriptObj) {
					this.scriptObj.parentNode.removeChild(this.scriptObj);
					delete this.scriptObj
				}
				var requrl = url +"?"+ serializeObject(obj);
				this.scriptObj = loadScript(requrl);
				count++;
			}
		};
		var iframe_count = 0;
		this.MakeIframeTarget = function(form,encapsulating_object,callback){
			var target = encapsulating_object +"_"+ iframe_count;
			var iframe = $B("iframe",{
				className: parcelsInterfaceStyle,
				name: target
			});
			iframe_count++;
			form.target = target;
			var inputs = form.getElementsByTagName("input");
			for(var i=inputs.length-1;i>=0;i--){
				if(!(inputs[i].exclude||inputs[i].encapsulated)){
					inputs[i].name = encapsulating_object + "["+inputs[i].name+"]";
					inputs[i].encapsulated = true;
				}
			}
			if (callback) {
				iframe.onload = function(obj1){
					iframe.onload = callback;
				}
			}
			document.body.appendChild(iframe);
			return iframe;
		};
	}();
